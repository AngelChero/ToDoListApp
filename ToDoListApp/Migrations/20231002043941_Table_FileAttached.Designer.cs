// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ToDoListApp.Data;

#nullable disable

namespace ToDoListApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231002043941_Table_FileAttached")]
    partial class Table_FileAttached
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ToDoListApp.Entities.FileAttached", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<int>("TaskDataId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Url")
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TaskDataId");

                    b.ToTable("FileAttacheds");
                });

            modelBuilder.Entity("ToDoListApp.Entities.Step", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("Done")
                        .HasColumnType("bit");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<int>("TaskDataId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TaskDataId");

                    b.ToTable("Steps");
                });

            modelBuilder.Entity("ToDoListApp.Entities.TaskData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("TaskDatas");
                });

            modelBuilder.Entity("ToDoListApp.Entities.FileAttached", b =>
                {
                    b.HasOne("ToDoListApp.Entities.TaskData", "TaskData")
                        .WithMany("FileAttacheds")
                        .HasForeignKey("TaskDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TaskData");
                });

            modelBuilder.Entity("ToDoListApp.Entities.Step", b =>
                {
                    b.HasOne("ToDoListApp.Entities.TaskData", "TaskData")
                        .WithMany("Steps")
                        .HasForeignKey("TaskDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TaskData");
                });

            modelBuilder.Entity("ToDoListApp.Entities.TaskData", b =>
                {
                    b.Navigation("FileAttacheds");

                    b.Navigation("Steps");
                });
#pragma warning restore 612, 618
        }
    }
}
